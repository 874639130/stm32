/*********************************************************************************************/
【*】程序简介



【 ！】功能简介：
使用TCP协议与电脑端通讯,用作TCP client

学习目的：学习STM32以太网(ETH)外设，了解LWIP及其应用。

 
【 ！】实验操作：
电脑端使用串口调试助手，选择电脑与STM32相连的COM口，设置为115200-N-8-1，

使用网线连接开发板与路由，复位开发板，可接收STM32串口发送给电脑的调试信息。

开发板的IP地址 及 端口 192.168.1.122
远端主机IP地址 及 端口 192.168.1.102:6000


在电脑端打开“网络调试助手”，配置使用“TCP SERVER 协议”，
设置好电脑端本机地址（192.168.1.102:6000），并 开始监听



 


【 ！！】注意事项：
跳线帽：使用跳线帽连接 以太网附近的J20引脚（出厂默认已连接）
路由要求：IP地址为192.168.1.1
电脑端要求：与STM32接在同一个路由中（同一个局域网），IP地址为192.168.1.102

只要所在的路由能访问公网，开发板就能访问公网。
而要想公网访问开发板 可使用路由设置“DMZ主机” 具体百度吧。

实际上对于开发板来说，公网访问和局域网访问是没有区别的，所以不要问能不能支持公网了。。
区分公网和局域网是所在的网络问题（包括运营商、路由策略等等，跟开发板无关）。
实验时一般直接用局域网测试即可。



/*********************************************************************************************/

【*】 引脚分配

PHY(LAN8720A芯片）：
PHY芯片使用MII接口与STM32相连。
	MII_TX_CLK	<--->PC3
	MII_TX_EN	<--->PB11
	MII_TXD0	<--->PG13
	MII_TXD1	<--->PG14
	MII_RXD0	<--->PC4
	MII_RXD1	<--->PC5
	MII_CRS_DV	<--->PA7
	MII_REF_CLK	<--->PA1
	
	ETH_MDC		<--->PC1
	ETH_MDIO	<--->PA2

串口(TTL-USB TO USART)：
CH340的收发引脚与STM32的发收引脚相连。
	RX<--->PA9
	TX<--->PA10
	
/*********************************************************************************************/

【*】 时钟

A.晶振：
-外部高速晶振：25MHz
-RTC晶振：32.768KHz

B.各总线运行时钟：
-系统时钟 = SYCCLK = AHB1 = 180MHz
-APB2 = 90MHz 
-APB1 = 45MHz

C.浮点运算单元：
  不使用

/*********************************************************************************************/

lwip1.4.1 中 ARP数据缓存存在一个很明显的缺陷
etharp.c中的etharp_query函数
if (arp_table[i].state == ETHARP_STATE_PENDING) {   //如果目标ip地址的mac解析还没有完成
      struct pbuf *p;
      int copy_needed = 0;    //标记是否需要拷贝
      p = q;

      //这里循环检测pbuf链表，如果发现任意的非pbuf_rom节点，那么就需要拷贝
      while (p) { 
          if(p->type != PBUF_ROM) {
              copy_needed = 1;
              break;
          }
          p = p->next;
      }

      if(copy_needed) {       //如果需要拷贝，则申请p->totlen长度的空间   
          //p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);//源码修改前
		  p = pbuf_alloc(PBUF_RAW, q->tot_len, PBUF_RAM);//源码修改后
          if(p != NULL) {
                if (pbuf_copy(p, q) != ERR_OK) {     //拷贝pbuf链表
                    pbuf_free(p);
                    p = NULL;
          }
       }
     }

/*********************************************************************************************/
在mem.c文件中
void *
mem_malloc(mem_size_t size)函数中的源代码互斥量语句被注释，调用系统互斥量语句引起了lwip_netif
结构体成员值的变化 导致产生内存出错
在lwip_comm.c中定义了一个lwipCoreErr，如果lwip内核出错，lwipCoreErr=1，在etharp.c etharp_arp_input中
如果内核出错，打印出错信息，跳出函数以下执行
/*********************************************************************************************/